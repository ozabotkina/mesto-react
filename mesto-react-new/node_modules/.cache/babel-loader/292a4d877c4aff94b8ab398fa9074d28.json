{"ast":null,"code":"class API {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n\n    this.changeAuthorInfo = (name, about) => {\n      return fetch(`${this._baseUrl}/users/me`, {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify({\n          name: name,\n          about: about\n        })\n      }).then(res => {\n        return this._checkAnswer(res);\n      });\n    };\n\n    this.fetchInitialCards = () => {\n      return fetch(`${this._baseUrl}/cards`, {\n        method: 'GET',\n        headers: this._headers\n      }).then(res => {\n        return this._checkAnswer(res);\n      });\n    };\n\n    this.addNewCard = (link, name) => {\n      return fetch(`${this._baseUrl}/cards`, {\n        method: 'POST',\n        headers: this._headers,\n        body: JSON.stringify({\n          name: name,\n          link: link\n        })\n      }).then(res => {\n        return this._checkAnswer(res);\n      });\n    };\n\n    this.deleteCard = cardId => {\n      return fetch(`${this._baseUrl}/cards/${cardId}`, {\n        method: 'DELETE',\n        headers: this._headers\n      }).then(res => {\n        return this._checkAnswer(res);\n      });\n    };\n\n    this.createLike = cardId => {\n      return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n        method: 'PUT',\n        headers: this._headers\n      }).then(res => {\n        return this._checkAnswer(res);\n      });\n    };\n\n    this.deleteLike = cardId => {\n      return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n        method: 'DELETE',\n        headers: this._headers\n      }).then(res => {\n        return this._checkAnswer(res);\n      });\n    };\n\n    this.changeAvatar = avatarlink => {\n      return fetch(`${this._baseUrl}/users/me/avatar`, {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify({\n          avatar: avatarlink\n        })\n      }).then(res => {\n        return this._checkAnswer(res);\n      });\n    };\n\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  _checkAnswer(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(res.status);\n  }\n\n  fetchInitialData() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(res => {\n      return this._checkAnswer(res);\n    });\n  }\n\n}\n\nexport const api = new API({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-46',\n  headers: {\n    authorization: '24287173-ba31-4a1d-8c0b-4b3b6920eaaf',\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"names":["API","constructor","baseUrl","headers","changeAuthorInfo","name","about","fetch","_baseUrl","method","_headers","body","JSON","stringify","then","res","_checkAnswer","fetchInitialCards","addNewCard","link","deleteCard","cardId","createLike","deleteLike","changeAvatar","avatarlink","avatar","ok","json","Promise","reject","status","fetchInitialData","api","authorization"],"sources":["/Users/olgazabotkina/mesto-react/mesto-react-new/src/utils/API.js"],"sourcesContent":["\nclass API {\n     constructor({baseUrl, headers}){\n        this._baseUrl = baseUrl;\n        this._headers = headers;}\n\n_checkAnswer(res){\n    if(res.ok){return res.json();}\n    return Promise.reject(res.status);}\n\nfetchInitialData(){\n    return fetch(`${this._baseUrl}/users/me`, {\n        method:'GET',\n        headers: this._headers})   \n    .then ((res) => {return (this._checkAnswer(res))})}\n\nchangeAuthorInfo = (name,about) => {\n    return fetch(`${this._baseUrl}/users/me`, {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify({\n        name: name,\n        about: about})})\n        .then ((res) => {return (this._checkAnswer(res))})};\n       \nfetchInitialCards = () => {\n    return fetch (`${this._baseUrl}/cards`, {\n        method:'GET',\n        headers: this._headers})\n    .then ((res) => { return (this._checkAnswer(res)); })};\n        \n addNewCard = (link, name) => {\n    return fetch (`${this._baseUrl}/cards`, {\n        method:'POST',\n        headers: this._headers,\n        body: JSON.stringify({\n        name: name,\n        link: link})})\n        .then ((res) => {return (this._checkAnswer(res))})};\n          \ndeleteCard = (cardId) => {\n        return fetch (`${this._baseUrl}/cards/${cardId}`, {\n        method: 'DELETE',\n        headers: this._headers})\n        .then ((res) => {return (this._checkAnswer(res))})};\n                \ncreateLike = (cardId) => {\n        return fetch (`${this._baseUrl}/cards/${cardId}/likes`, {\n        method: 'PUT',\n        headers: this._headers})\n        .then ((res) => {return (this._checkAnswer(res))})};\n\ndeleteLike = (cardId) => {\n        return fetch (`${this._baseUrl}/cards/${cardId}/likes`, {\n        method: 'DELETE',\n        headers: this._headers})\n        .then ((res) => {return (this._checkAnswer(res))})};\n \nchangeAvatar = (avatarlink) => {\n        return fetch (`${this._baseUrl}/users/me/avatar`, {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify({\n            avatar: avatarlink})})\n        .then ((res) => {return (this._checkAnswer(res))})}}\n\n\nexport const api = new API({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-46',\n    headers: {\n        authorization: '24287173-ba31-4a1d-8c0b-4b3b6920eaaf',\n        'Content-Type': 'application/json' }});"],"mappings":"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"},"metadata":{},"sourceType":"module"}